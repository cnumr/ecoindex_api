{
  "openapi": "3.0.2",
  "info": {
    "title": "Ecoindex API",
    "description": "Ecoindex API enables you to perform ecoindex analysis of given web pages",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/ecoindexes": {
      "post": {
        "tags": [
          "Ecoindex"
        ],
        "summary": "New Ecoindex Analysis",
        "description": "This performs ecoindex analysis of a given webpage with a defined resolution",
        "operationId": "New_ecoindex_analysis_v1_ecoindexes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Web page to analyze defined by its url and its screen resolution",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebPage"
                  }
                ]
              },
              "example": {
                "width": 1920,
                "height": 1080,
                "url": "http://www.ecoindex.fr"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Corresponding ecoindex result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEcoindex"
                }
              }
            }
          },
          "429": {
            "description": "You have reached the daily limit",
            "content": {
              "application/json": {
                "example": {
                  "detail": "You have already reached the daily limit of 5 requests for host www.ecoindex.fr today"
                }
              }
            }
          },
          "500": {
            "description": "My bad! \ud83d\ude15 => Server exception",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "args": [
                      "unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: headless chrome=96.0.4664.110)",
                      [
                        "#0 0x55ffa3dd7ee3 <unknown>",
                        "#1 0x55ffa38a5608 <unknown>"
                      ]
                    ],
                    "exception": "WebDriverException",
                    "message": "unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: headless chrome=96.0.4664.110)"
                  }
                }
              }
            }
          },
          "502": {
            "description": "This url seems not OK... \ud83d\ude44",
            "content": {
              "application/json": {
                "example": {
                  "detail": "This host is unreachable. Are you really sure of this url? \ud83e\udd14"
                }
              }
            }
          },
          "504": {
            "description": "Timeout reached when requesting this url. This is probably a temporary issue. \ud83d\ude25",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Timeout reached when requesting this url. This is probably a temporary issue. \ud83d\ude25"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/ecoindexes": {
      "get": {
        "tags": [
          "Ecoindex"
        ],
        "summary": "Get Ecoindex Analysis List",
        "description": "This returns a list of ecoindex analysis corresponding to query filters and the given version engine. The results are ordered by ascending date",
        "operationId": "Get_ecoindex_analysis_list__version__ecoindexes_get",
        "parameters": [
          {
            "description": "Engine version used to run the analysis (v0 or v1)",
            "required": true,
            "schema": {
              "title": "Engine version",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Version"
                }
              ],
              "description": "Engine version used to run the analysis (v0 or v1)"
            },
            "example": "v1",
            "name": "version",
            "in": "path"
          },
          {
            "description": "Start date of the filter elements (example: 2020-01-01)",
            "required": false,
            "schema": {
              "title": "Date From",
              "type": "string",
              "description": "Start date of the filter elements (example: 2020-01-01)",
              "format": "date"
            },
            "name": "date_from",
            "in": "query"
          },
          {
            "description": "End date of the filter elements  (example: 2020-01-01)",
            "required": false,
            "schema": {
              "title": "Date To",
              "type": "string",
              "description": "End date of the filter elements  (example: 2020-01-01)",
              "format": "date"
            },
            "name": "date_to",
            "in": "query"
          },
          {
            "description": "Host name you want to filter",
            "required": false,
            "schema": {
              "title": "Host",
              "type": "string",
              "description": "Host name you want to filter"
            },
            "name": "host",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "gte": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Number of elements per page",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer",
              "description": "Number of elements per page",
              "default": 50,
              "gte": 1,
              "lte": 100
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corresponding ecoindex results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageApiEcoindexes"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageApiEcoindexes"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageApiEcoindexes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/ecoindexes/{id}": {
      "get": {
        "tags": [
          "Ecoindex"
        ],
        "summary": "Get Ecoindex Analysis By Id",
        "description": "This returns an ecoindex given by its unique identifier",
        "operationId": "Get_ecoindex_analysis_by_id__version__ecoindexes__id__get",
        "parameters": [
          {
            "description": "Engine version used to run the analysis (v0 or v1)",
            "required": true,
            "schema": {
              "title": "Engine version",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Version"
                }
              ],
              "description": "Engine version used to run the analysis (v0 or v1)"
            },
            "example": "v1",
            "name": "version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Unique identifier of the ecoindex analysis",
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Get one ecoindex result by its id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEcoindex"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Analysis e9a4d5ea-b9c5-4440-a74a-cac229f7d672 not found for version v1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{version}/hosts": {
      "get": {
        "tags": [
          "Host"
        ],
        "summary": "Get Host List",
        "description": "This returns a list of hosts that ran an ecoindex analysis order by most request made",
        "operationId": "Get_host_list__version__hosts_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Engine version used to run the analysis",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Version"
                }
              ]
            },
            "name": "version",
            "in": "path"
          },
          {
            "description": "Start date of the filter elements (example: 2020-01-01)",
            "required": false,
            "schema": {
              "title": "Date From",
              "type": "string",
              "description": "Start date of the filter elements (example: 2020-01-01)",
              "format": "date"
            },
            "name": "date_from",
            "in": "query"
          },
          {
            "description": "End date of the filter elements  (example: 2020-01-01)",
            "required": false,
            "schema": {
              "title": "Date To",
              "type": "string",
              "description": "End date of the filter elements  (example: 2020-01-01)",
              "format": "date"
            },
            "name": "date_to",
            "in": "query"
          },
          {
            "description": "Filter by partial host name",
            "required": false,
            "schema": {
              "title": "Q",
              "type": "string",
              "description": "Filter by partial host name"
            },
            "name": "q",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "gte": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Number of elements per page",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer",
              "description": "Number of elements per page",
              "default": 50,
              "gte": 1,
              "lte": 100
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List ecoindex hosts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageHosts"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageHosts"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageHosts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Infra"
        ],
        "summary": "Get Healthcheck",
        "description": "Check health status of components of the API (database...)",
        "operationId": "Get_healthcheck_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHealth"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiEcoindex": {
        "title": "ApiEcoindex",
        "required": [
          "size",
          "nodes",
          "requests",
          "host",
          "initial_ranking",
          "initial_total_results"
        ],
        "type": "object",
        "properties": {
          "width": {
            "title": "Page Width",
            "type": "integer",
            "description": "Width of the simulated window in pixel"
          },
          "height": {
            "title": "Page Height",
            "type": "integer",
            "description": "Height of the simulated window in pixel"
          },
          "url": {
            "title": "Page url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Url of the analysed page",
            "format": "uri"
          },
          "size": {
            "title": "Page size",
            "minimum": 0.0,
            "type": "number",
            "description": "Is the size of the page and of the downloaded elements of the page in KB"
          },
          "nodes": {
            "title": "Page nodes",
            "minimum": 0.0,
            "type": "integer",
            "description": "Is the number of the DOM elements in the page"
          },
          "requests": {
            "title": "Page requests",
            "minimum": 0.0,
            "type": "integer",
            "description": "Is the number of external requests made by the page"
          },
          "grade": {
            "title": "Ecoindex grade",
            "type": "string",
            "description": "Is the corresponding ecoindex grade of the page (from A to G)"
          },
          "score": {
            "title": "Ecoindex score",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "Is the corresponding ecoindex score of the page (0 to 100)"
          },
          "ges": {
            "title": "Ecoindex GES equivalent",
            "minimum": 0.0,
            "type": "number",
            "description": "Is the equivalent of greenhouse gases emission (in `gCO2e`) of the page"
          },
          "water": {
            "title": "Ecoindex Water equivalent",
            "minimum": 0.0,
            "type": "number",
            "description": "Is the equivalent water consumption (in `cl`) of the page"
          },
          "date": {
            "title": "Analysis datetime",
            "type": "string",
            "description": "Date of the analysis",
            "format": "date-time"
          },
          "page_type": {
            "title": "Page type",
            "type": "string",
            "description": "Is the type of the page, based ton the [opengraph type tag](https://ogp.me/#types)"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Analysis ID of type `UUID`",
            "format": "uuid"
          },
          "host": {
            "title": "Web page host",
            "type": "string",
            "description": "Host name of the web page"
          },
          "version": {
            "title": "API version",
            "type": "integer",
            "description": "Version number of the API used to run the test",
            "default": 1
          },
          "initial_ranking": {
            "title": "Analysis rank",
            "type": "integer",
            "description": "This is the initial rank of the analysis. This is an indicator of the ranking at the time of the analysis for a given version."
          },
          "initial_total_results": {
            "title": "Total number of analysis",
            "type": "integer",
            "description": "This is the initial total number of analysis. This is an indicator of the total number of analysis at the time of the analysis for a given version."
          }
        }
      },
      "ApiHealth": {
        "title": "ApiHealth",
        "required": [
          "database"
        ],
        "type": "object",
        "properties": {
          "database": {
            "title": "Status of database",
            "type": "boolean"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "PageApiEcoindexes": {
        "title": "PageApiEcoindexes",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiEcoindex"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          }
        }
      },
      "PageHosts": {
        "title": "PageHosts",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Version": {
        "title": "Version",
        "enum": [
          "v0",
          "v1"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "WebPage": {
        "title": "WebPage",
        "type": "object",
        "properties": {
          "width": {
            "title": "Page Width",
            "type": "integer",
            "description": "Width of the simulated window in pixel"
          },
          "height": {
            "title": "Page Height",
            "type": "integer",
            "description": "Height of the simulated window in pixel"
          },
          "url": {
            "title": "Page url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Url of the analysed page",
            "format": "uri"
          }
        }
      }
    }
  }
}
